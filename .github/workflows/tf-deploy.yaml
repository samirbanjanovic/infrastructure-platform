# This is a basic workflow to help you get started with Actions
name: TF Deploy Infrastructure
defaults:
  run:
    working-directory: terraform/control/
    
# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
        environment:
            description: 'Environment to deploy to'
            required: true
            default: 'development'

    # environment variables used in this workflow
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: '${{ inputs.environment }}'
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
   
      - name: Terraform Init
        id: init 
        run: terraform init -backend-config=storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }} -backend-config=container_name=${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}} -backend-config=key=${{secrets.TFSTATE_KEY}} -backend-config=resource_group_name=${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
               
  deploy-prod:
    runs-on: 'ubuntu-latest'
    environment: '${{ inputs.environment }}'
    needs: [build]
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
          
      - name: Terraform Init
        id: init 
        run: terraform init -backend-config=storage_account_name=${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }} -backend-config=container_name=${{secrets.TFSTATE_STORAGE_CONTAINER_NAME}} -backend-config=key=${{secrets.TFSTATE_KEY}} -backend-config=resource_group_name=${{secrets.TFSTATE_RESOURCES_GROUP_NAME}}

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve 